@import '../functions/radius';

@mixin radius($position, $size) {
    @if ($position == all) {
      border-radius: $size;
    }
    @if ($position == left) {
      border-radius: $size 0 0 $size;
    }
    @if ($position == right) {
      border-radius: 0 $size $size 0;
    }
    @if ($position == bottom) {
      border-radius: 0 0 $size $size;
    }
    @if ($position == top) {
      border-radius: $size $size 0 0;
    }
  }
  
  $enable-rounded: true !default;
  
  @mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
    @if $enable-rounded {
      border-radius: valid-radius($radius);
    }
    @else if $fallback-border-radius != false {
      border-radius: $fallback-border-radius;
    }
  }
  
  @mixin border-top-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: valid-radius($radius);
      border-top-right-radius: valid-radius($radius);
    }
  }
  
  @mixin border-right-radius($radius) {
    @if $enable-rounded {
      border-top-right-radius: valid-radius($radius);
      border-bottom-right-radius: valid-radius($radius);
    }
  }
  
  @mixin border-bottom-radius($radius) {
    @if $enable-rounded {
      border-bottom-right-radius: valid-radius($radius);
      border-bottom-left-radius: valid-radius($radius);
    }
  }
  
  @mixin border-left-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: valid-radius($radius);
      border-bottom-left-radius: valid-radius($radius);
    }
  }
  
  @mixin border-top-left-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: valid-radius($radius);
    }
  }
  
  @mixin border-top-right-radius($radius) {
    @if $enable-rounded {
      border-top-right-radius: valid-radius($radius);
    }
  }
  
  @mixin border-bottom-right-radius($radius) {
    @if $enable-rounded {
      border-bottom-right-radius: valid-radius($radius);
    }
  }
  
  @mixin border-bottom-left-radius($radius) {
    @if $enable-rounded {
      border-bottom-left-radius: valid-radius($radius);
    }
  }


